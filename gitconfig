[init]
  templatedir = ~/.git_template
[color]
  ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse
[color "status"]
  added = yellow
  changed = green
[alias]
  aa = add --all
  amend = commit --amend --reuse-message=HEAD
  ap = add --patch
  branches = for-each-ref --sort=-committerdate --format=\"%(color:blue)%(authordate:relative)\t%(color:red)%(authorname)\t%(color:white)%(color:bold)%(refname:short)\" refs/remotes
  ci = commit -v
  co = checkout
  pf = push --force-with-lease
  save = !git add -A && git commit -m 'SAVEPOINT'
  undo = reset HEAD~1 --mixed
  wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
  bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs git branch -d; }; f"
  bdone = "!f() { git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
  cb = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  co-pr = !sh -c 'git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1' -
  create-branch = !sh -c 'git push origin HEAD:refs/heads/$1 && git fetch origin && git branch --track $1 origin/$1 && cd . && git checkout $1' -
  ctags = "!sh -c '[ -f .git/hooks/ctags ] || git init; .git/hooks/ctags' git-ctags"
  current-branch = !sh -c 'git rev-parse --abbrev-ref HEAD' -
  delete-branch = !sh -c 'git push origin :refs/heads/$1 && git branch -D $1' -
  merge-branch = !git checkout master && git merge @{-1}
  pr = !gh pull-request
  rename-branch = !sh -c 'old=$(git current-branch) && git branch -m $old $1 && git push origin --set-upstream $1 && git push origin --delete $old' -
  up = !git pull --rebase --prune $@ && git submodule update --init --recursive
  pager = /usr/bin/git-pager
  info = /usr/bin/git-info
  s = status
  st = status
  b = branch
  ba = branch -a
  d = diff
  ds = diff --cached
  lg = log -p
  lol = log --graph --decorate --pretty=oneline --abbrev-commit
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  ls = ls-files
  ls-ignored = ls-files --exclude-standard --ignored --others
  wd = diff --word-diff="color"
  wds = diff --word-diff="color" --cached

  # Make stashing easier
  sts = stash
  stl = stash list
  stp = stash pop

  # Make rebasing easier
  rb = rebase
  rba = rebase --abort
  rbc = rebase --continue
  rbs = rebase --skip

  # Show compact history
  l = "!git log --graph --pretty='tformat:%C(yellow)%h{%C(green)%ar{%C(bold blue)%an{%C(red)%d%C(reset) %s' $* | column -t -s '{' | less -FXRS"
  # Show commit log using graph notation
  lg = log --graph --pretty=format:'%Cred%h%Creset %an -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
  # List commits showing changed files
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  ra = log --graph --abbrev-commit --date=relative -20 --all --pretty='format:%C(yellow)%h%Creset -%C(red)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset'

  # Easily ignore committed, but changed files that I don't want to commit
  assume = update-index --assume-unchanged
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
  unassume = update-index --no-assume-unchanged
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
[core]
  excludesfile = ~/.gitignore
  autocrlf = input
  editor = vim
  whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol,space-before-tab
[merge]
  defaultToUpstream = true
  stat = true
[rebase]
  autosquash = true
[commit]
  template = ~/dotfiles/.gitmessage
[branch]
  autosetupmerge = true
[fetch]
  prune = true
[rebase]
  autosquash = true
[push]
  default = upstream
[rerere]
  enabled = true
[diff]
  renames = copies
  mnemonicprefix = true
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[include]
  path = ~/.gitconfig.local
[github]
  user = pendletons
[user]
  name = Shanthi Pendleton
  email = shanthi.pendleton@gmail.com
[filter "hawser"]
  clean = git hawser clean %f
  smudge = git hawser smudge %f
  required = true
[advice]
  pushNonFastForward = false
  statusHints = false
[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true
