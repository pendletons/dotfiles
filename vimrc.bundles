if &compatible
  set nocompatible
end

call plug#begin('~/.vim/bundle')

" Sensible defaults
Plug 'sheerun/vimrc'

" General purpose
Plug 'christoomey/vim-run-interactive' " interactive shell commands
Plug 'ctrlpvim/ctrlp.vim' " fast file-switch
Plug 'kchmck/vim-coffee-script'
Plug 'pbrisbin/vim-mkdir' " create path for new file
Plug 'scrooloose/syntastic'
Plug 'slim-template/vim-slim'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch' " Unix commands
Plug 'tpope/vim-fugitive' " git functionality
Plug 'tpope/vim-projectionist'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-repeat' " Repeat plugin map commands
Plug 'tpope/vim-surround' " alter syntax around text
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/tComment' " easily comment things
Plug 'thoughtbot/vim-rspec'
Plug 'vim-scripts/ctags.vim'
Plug 'vim-scripts/matchit.zip' " % matching
Plug 'rking/ag.vim' " searching
Plug 'mattn/webapi-vim'
Plug 'mattn/gist-vim' " create gists
Plug 'bling/vim-airline' " status bars
Plug 'edkolev/tmuxline.vim'
Plug 'edkolev/promptline.vim'
Plug 'scrooloose/nerdtree' " file browser
Plug 'majutsushi/tagbar' " class browser
Plug 'vim-scripts/AfterColors.vim'
Plug 'airblade/vim-gitgutter' " Display git changes in file
Plug 'mattn/webapi-vim' " Interface for web APISs
Plug 'janko-m/vim-test'
Plug 'mattn/gist-vim' " create gists
Plug 'bling/vim-airline'
Plug 'moll/vim-bbye' " close buffers easily
Plug 'christoomey/vim-tmux-navigator' " Tmux navigation for panes
Plug 'jgdavey/tslime.vim' " Send commands to tmux
Plug 'tpope/vim-dispatch' " Asynchronous test running
Plug 'moll/vim-bbye' " close buffers easily
Plug 'jeffkreeftmeijer/vim-numbertoggle.git' " Line numbers/movement
Plug 'sjl/vitality.vim' " Iterm niceness
Plug 'terryma/vim-expand-region' " visually select regions
Plug 'sjl/gundo.vim.git' " undo tree
Plug 'maxbrunsfeld/vim-yankstack' " yank history
Plug 'mmozuras/vim-github-comment' " comment on github from vim
Plug 'tpope/vim-rsi' " Readline functionality for vim
Plug 'tpope/vim-obsession' " Session saving
Plug 'tmux-plugins/vim-tmux-focus-events' " Better focus lost/gained handling
Plug 'Lokaltog/vim-easymotion' " Better motion commands
Plug '907th/vim-auto-save' " auto save buffers

" Themes
Plug 'nanotech/jellybeans.vim'
Plug 'chriskempson/base16-vim'
Plug 'Pychimp/vim-sol'
Plug 'paranoida/vim-airlineish'
Plug 'endel/vim-github-colorscheme'

" Syntax
Plug 'kchmck/vim-coffee-script'
Plug 'scrooloose/syntastic'
Plug 'slim-template/vim-slim'
Plug 'vim-scripts/ctags.vim' " display function name in title bar
Plug 'vim-scripts/Better-CSS-Syntax-for-Vim'
Plug 'tpope/vim-commentary' " easily comment things
Plug 'Raimondi/delimitMate'
Plug 'docunext/closetag.vim'
Plug 'ervandew/supertab'
Plug 'tpope/vim-capslock.git'
Plug 'ap/vim-css-color'
Plug 'luochen1990/rainbow'
Plug 'Valloric/YouCompleteMe' " code completion
Plug 'tpope/vim-sleuth' " smart indent based on syntax
Plug 'AndrewRadev/splitjoin.vim' " split lines/join lines
Plug 'mxw/vim-jsx' " JSX indentation/highligting

Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'garbas/vim-snipmate'
Plug 'honza/vim-snippets'

" Node
Plug 'moll/vim-node'
Plug 'jamescarr/snipmate-nodejs'
Plug 'XadillaX/json-formatter.vim'
Plug 'lfilho/cosco.vim' " , and ; handling

" Ruby/Rails
Plug 'thoughtbot/vim-rspec' " Rspec commands
Plug 'tpope/vim-bundler' " :Bundle command
Plug 'tpope/vim-endwise' " add end in ruby files
Plug 'tpope/vim-rails' " Rails awareness
Plug 'vim-ruby/vim-ruby'
Plug 'ecomba/vim-ruby-refactoring'
Plug 'skalnik/vim-vroom' " Rails tests
Plug 'kana/vim-textobj-user' " Pre-req for vim-textobj-rubyblock
Plug 'nelstrom/vim-textobj-rubyblock' " select Ruby blocks

" Elixir
Plug 'elixir-lang/vim-elixir' " Syntax highlighting/indentation

" Themes
" Plug 'bling/vim-airline'
Plug 'itchyny/lightline.vim'
Plug 'edkolev/tmuxline.vim'
Plug 'bling/vim-bufferline'
Plug 'edkolev/promptline.vim'
Plug 'vim-scripts/AfterColors.vim'

Plug 'nanotech/jellybeans.vim'
Plug 'chriskempson/base16-vim'
Plug 'Pychimp/vim-sol'
Plug 'paranoida/vim-airlineish'
Plug 'endel/vim-github-colorscheme'

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
