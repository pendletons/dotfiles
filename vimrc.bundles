if &compatible
  set nocompatible
end

" Remove declared plugins
function! s:UnPlug(plug_name)
  if has_key(g:plugs, a:plug_name)
    call remove(g:plugs, a:plug_name)
  endif
endfunction
command!  -nargs=1 UnPlug call s:UnPlug(<args>)

" Shim command and function to allow migration from Vundle to vim-plug.
function! VundleToPlug(vundle_command, arg, ...)
  echom "You are using Vundle's `".a:vundle_command."` command to declare plugins. Dotfiles now uses vim-plug for plugin management. Please rename uses of `".a:vundle_command."` to `Plug`. Plugin was '".a:arg."'."
  let vim_plug_options = {}

  if a:0 > 0
    if has_key(a:1, 'name')
      let name = a:1.name
      let vim_plug_options.dir = "$HOME/.vim/bundle/".a:1.name
    endif

    if has_key(a:1, 'rtp')
      let vim_plug_options.rtp = a:1.rtp
    endif
  endif

  Plug a:arg, vim_plug_options
endfunction

com! -nargs=+  -bar Plugin call VundleToPlug("Plugin", <args>)
com! -nargs=+  -bar Bundle call VundleToPlug("Bundle", <args>)

let g:has_async = v:version >= 800 || has('nvim')

call plug#begin('~/.vim/bundle')

" Define bundles via Github repos
UnPlug 'christoomey/vim-run-interactive'
Plug 'ctrlpvim/ctrlp.vim' " fast file switching
UnPlug 'elixir-lang/vim-elixir'
UnPlug 'fatih/vim-go'
Plug 'janko-m/vim-test'
Plug 'pbrisbin/vim-mkdir'
Plug 'slim-template/vim-slim'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-projectionist'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-repeat'
UnPlug 'tpope/vim-rhubarb'
Plug 'tpope/vim-surround'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/tComment'
Plug 'vim-scripts/ctags.vim'
Plug 'vim-scripts/matchit.zip' " % matching
Plug 'scrooloose/nerdtree' " file browser
Plug 'majutsushi/tagbar' " class browser
Plug 'airblade/vim-gitgutter' " Display git changes in file
Plug 'moll/vim-bbye' " close buffers easily
Plug 'jeffkreeftmeijer/vim-numbertoggle' " Line numbers/movement
Plug 'sjl/gundo.vim' " undo tree
Plug 'maxbrunsfeld/vim-yankstack' " yank history
Plug 'Lokaltog/vim-easymotion' " Better motion commands
Plug '907th/vim-auto-save' " auto save buffers
Plug 'raimondi/delimitmate' " auto-closing matching things

" Syntax
Plug 'kchmck/vim-coffee-script', { 'for': 'coffee' }
Plug 'pangloss/vim-javascript', { 'for': 'javascript' }
Plug 'tpope/vim-sleuth' " smart indent based on syntax

" Ruby/Rails
Plug 'tpope/vim-endwise' " add end in ruby files

if g:has_async
  Plug 'w0rp/ale'
endif

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
