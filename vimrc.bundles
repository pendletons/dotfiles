if &compatible
  set nocompatible
end

" Remove declared plugins
function! s:UnPlug(plug_name)
  if has_key(g:plugs, a:plug_name)
    call remove(g:plugs, a:plug_name)
  endif
endfunction
command!  -nargs=1 UnPlug call s:UnPlug(<args>)

let g:has_async = v:version >= 800 || has('nvim')

call plug#begin('~/.vim/bundle')

" If fzf has already been installed via Homebrew, use the existing fzf
" Otherwise, install fzf. The `--all` flag makes fzf accessible outside of vim
if isdirectory("/usr/local/opt/fzf")
  Plug '/usr/local/opt/fzf'
else
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
endif

" Define bundles via Github repos
UnPlug 'christoomey/vim-run-interactive'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'elixir-lang/vim-elixir'
UnPlug 'fatih/vim-go'
Plug 'janko-m/vim-test'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-endwise' " add end in ruby files
Plug 'tpope/vim-eunuch' " Unix commands
Plug 'tpope/vim-fugitive' " Git workflow
Plug 'tpope/vim-rails'
Plug 'tpope/vim-rake'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-surround'
Plug 'vim-ruby/vim-ruby'
Plug 'vim-scripts/tComment'
if !exists('g:vscode')
  Plug 'vim-scripts/ctags.vim'
endif
Plug 'vim-scripts/matchit.zip' " % matching
if !exists('g:vscode')
  Plug 'scrooloose/nerdtree' " file browser
  Plug 'airblade/vim-gitgutter' " Display git changes in file
  Plug 'moll/vim-bbye' " close buffers easily
  Plug 'jeffkreeftmeijer/vim-numbertoggle' " Line numbers/movement
endif
Plug 'raimondi/delimitmate' " auto-closing matching things
Plug 'zxqfl/tabnine-vim' " code completion
Plug 'gioele/vim-autoswap' " Better handling of swap files
if !exists('g:vscode')
  Plug 'mileszs/ack.vim'
endif
Plug 'benmills/vimux' " tmux integration
Plug 'christoomey/vim-tmux-navigator' " tmux/vim navigation
Plug '907th/vim-auto-save' " auto save buffers
Plug 'ajh17/VimCompletesMe' " code completion

" Themes
Plug 'quanganhdo/grb256'
Plug 'mhinz/vim-startify'

" Syntax
Plug 'StanAngeloff/php.vim' " PHP defaults
if !exists('g:vscode')
  Plug 'sheerun/vim-polyglot'
  Plug 'tpope/vim-sleuth' " smart indent based on syntax
  " Plug 'mhinz/vim-mix-format' " Elixir formatting
  Plug 'Chiel92/vim-autoformat' " Auto formatting
  Plug 'beanworks/vim-phpfmt' " PHP auto formatting
endif

" Other
if !exists('g:vscode')
  Plug 'wakatime/vim-wakatime' " time tracking
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' } " fzf fuzzy-finder
  Plug 'junegunn/fzf.vim'
  Plug 'itchyny/lightline.vim' " Status
  Plug 'maximbaz/lightline-ale' " Ale in status
end

" Snippets
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

" Other
Plug 'wakatime/vim-wakatime' " time tracking
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' } " fzf fuzzy-finder
Plug 'itchyny/lightline.vim' " Status
Plug 'maximbaz/lightline-ale' " Ale in status

if !exists('g:vscode') && g:has_async
  Plug 'dense-analysis/ale'
endif

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
